= FreeBSD Transparent Traffic Fitler =

= Introduction =

This will explain the installation configuration and maintenance for a FreeBSD
Transparent filter

= Requirements =
In general 3 Network interfaces make sense for a small setup.

Two interfaces to pipe the traffic and one management interface that has an IP
Address.


ifconfig_fxp0="inet 123.123.123.123 nemask 255.255.255.0" # assign an ip to one of the if's

Bridge the devices in rc.conf

cloned_interfaces="bridge0"
ifconfig_bridge0="addm bge0 addm nfe0 up"
ifconfig_bge0="up"
ifconfig_nfe0="up"

add to your sysctl.conf

net.link.bridge.pfil_onlyip=1
net.link.bridge.pfil_member=1
net.link.bridge.pfil_bridge=0

One possibility

add ipfirewall to kernel

options IPFIREWALL
options IPFIREWALL_FORWARD

firewall rules:

ipfw add 1000 pass tcp from 10.11.13.80 to any
ipfw add 1100 fws 10.11.13.80 tcp from 10.11.13.0/24 to any 80
ipfw add 65000 pass all from any to any

with pf:

# pf support
device pf
device pflog
device pfsync

# ALTQ support
options ALTQ
options ALTQ_CBQ
options ALTQ_RED
options ALTQ_RIO
options ALTQ_HFSC
options ALTQ_PRIQ

add to rc.conf:

pf_enable="YES" # enable PF
pf_rules="/etc/pf-bridge.conf" # rules def' file
pf_flags="" # any additional flags for pfctl
pflog_enable="YES" # start pflogd(8)
pflog_logfile="/var/log/pflog" # where pflogd should log to
pflog_flags="" # any additional pflogd flags

cp /etc/pf.conf /etc/pf-bridge.conf

edit pf-bridge.conf and adjust accordingly (see sample from opusinteractive)

http://blog.opusinteractive.com/filelinks/pf-bridge_generic.txt

enable ruleset

pfctl -f /etc/pf-bridge.conf
pfctl -e

some additional notes on managing pf:

pfctl -s rules # list current parsed rules
pfctl -f filename # reload ruleset with specified file
pfctl -d # disable pf
pfctl -e # enable pf
pfctl -R /etc/pf.conf # enable rules from specified file
pfctl -s rules -v # hit stats for each rule

log specific tcp packets to a different log file with a large snaplen:

ipflogd -s 1600 -f suspicious.log port 80 and host evilhost

display binary logs:

tcpdump -n -e -ttt -v -r /var/log/pflog

display log in realtime:

tcpdump -nexttti pflog0


